import{r as g,a3 as $}from"./vendor-CIPdjx1t.js";import{G as T}from"./index-Q594mB1I.js";const L={dashboardSettings:{selectedPegs:{required:!0,type:"array",minLength:1,message:"최소 하나의 PEG를 선택해야 합니다."},autoRefreshInterval:{required:!0,type:"number",min:5,max:300,message:"자동 새로고침 간격은 5초~300초 사이여야 합니다."},defaultNe:{type:"string",maxLength:50,message:"NE ID는 50자를 초과할 수 없습니다."},defaultCellId:{type:"string",maxLength:50,message:"Cell ID는 50자를 초과할 수 없습니다."}},statisticsSettings:{defaultDateRange:{required:!0,type:"number",min:1,max:365,message:"기본 날짜 범위는 1일~365일 사이여야 합니다."},decimalPlaces:{required:!0,type:"number",min:0,max:6,message:"소수점 자릿수는 0~6자리 사이여야 합니다."},defaultPegs:{required:!0,type:"array",minLength:1,message:"최소 하나의 기본 PEG를 선택해야 합니다."}}},w=()=>{var k,O,C,P,j,I;const e=T(),[h,y]=g.useState({}),a=g.useMemo(()=>{var r;return((r=e==null?void 0:e.state)==null?void 0:r.settings)||{}},[(k=e==null?void 0:e.state)==null?void 0:k.settings]),f=g.useCallback(r=>{e!=null&&e.updateSetting&&Object.entries(r).forEach(([s,n])=>{typeof n=="object"&&Object.entries(n).forEach(([c,l])=>{e.updateSetting(s,c,l)})})},[e==null?void 0:e.updateSetting]),b=g.useCallback(async()=>e!=null&&e.saveSettings?await e.saveSettings():!1,[e==null?void 0:e.saveSettings]),v=g.useCallback(async()=>e!=null&&e.loadSettings?await e.loadSettings():!1,[e==null?void 0:e.loadSettings]),E=g.useCallback(async r=>e!=null&&e.resetSettings?await e.resetSettings(r):{success:!1,error:"resetSettings 함수를 사용할 수 없습니다"},[e==null?void 0:e.resetSettings]),d=g.useCallback((r,s)=>{console.log(`[usePreference] ${r}`,s)},[]),u=g.useCallback((r,s)=>{console.error(`[usePreference] ${r}`,s)},[]),p=g.useCallback((r,s=null)=>{const n={};if(s&&!L[s])return n;const c=s?{[s]:L[s]}:L;return Object.entries(c).forEach(([l,m])=>{r[l]&&Object.entries(m).forEach(([o,t])=>{const i=r[l][o],S=`${l}.${o}`;if(t.required&&(i==null||i==="")){n[S]=t.message||`${o}는 필수 항목입니다.`;return}if(!(i==null||i==="")){if(t.type==="array"&&!Array.isArray(i)){n[S]=t.message||`${o}는 배열이어야 합니다.`;return}if(t.type==="number"&&typeof i!="number"){n[S]=t.message||`${o}는 숫자여야 합니다.`;return}if(t.type==="string"&&typeof i!="string"){n[S]=t.message||`${o}는 문자열이어야 합니다.`;return}if(t.type==="number"){if(t.min!==void 0&&i<t.min){n[S]=t.message||`${o}는 ${t.min} 이상이어야 합니다.`;return}if(t.max!==void 0&&i>t.max){n[S]=t.message||`${o}는 ${t.max} 이하여야 합니다.`;return}}if(t.type==="array"){if(t.minLength!==void 0&&i.length<t.minLength){n[S]=t.message||`${o}는 최소 ${t.minLength}개 항목이 필요합니다.`;return}if(t.maxLength!==void 0&&i.length>t.maxLength){n[S]=t.message||`${o}는 최대 ${t.maxLength}개 항목만 허용됩니다.`;return}}if(t.type==="string"){if(t.minLength!==void 0&&i.length<t.minLength){n[S]=t.message||`${o}는 최소 ${t.minLength}자 이상이어야 합니다.`;return}if(t.maxLength!==void 0&&i.length>t.maxLength){n[S]=t.message||`${o}는 최대 ${t.maxLength}자까지 허용됩니다.`;return}}}})}),n},[]),R=g.useCallback((r,s=null)=>{var l;d("설정 업데이트 및 검증 시작",{newSettings:r,section:s});const n=s?{...a,[s]:{...a[s],...r[s]}}:{...a,...r},c=p(n,s);if(y(c),Object.keys(c).length>0){u("설정 유효성 검증 실패",c);const m=Object.values(c)[0];return(l=a.notificationSettings)!=null&&l.errorNotification&&$.error(`설정 오류: ${m}`),!1}return f(r),d("설정 업데이트 완료"),!0},[a,p,f,d,u]),N=g.useCallback((r=null,s=null)=>{var n,c,l;try{const m={settings:s&&Object.keys(s).length>0?{...a,...s}:a,metadata:{exportedAt:new Date().toISOString(),version:"1.0.0",userId:((n=e==null?void 0:e.state)==null?void 0:n.userId)||"default"}},o=JSON.stringify(m,null,2),t=new Blob([o],{type:"application/json"}),i=document.createElement("a");return i.href=URL.createObjectURL(t),i.download=r||`preference-settings-${new Date().toISOString().split("T")[0]}.json`,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(i.href),d("설정 내보내기 완료",{filename:i.download}),(c=a.notificationSettings)!=null&&c.enableToasts&&$.success("설정이 파일로 내보내졌습니다"),!0}catch(m){return u("설정 내보내기 실패",m),(l=a.notificationSettings)!=null&&l.errorNotification&&$.error("설정 내보내기 실패: "+m.message),!1}},[a,(O=e==null?void 0:e.state)==null?void 0:O.userId,d,u]),D=g.useCallback(r=>new Promise((s,n)=>{const c=new FileReader;c.onload=l=>{var m,o;try{const t=JSON.parse(l.target.result);if(!t.settings)throw new Error("유효하지 않은 설정 파일입니다.");f(t.settings),d("설정 가져오기 완료",{filename:r.name}),(m=a.notificationSettings)!=null&&m.enableToasts&&$.success("설정이 성공적으로 가져와졌습니다"),s(t)}catch(t){u("설정 가져오기 실패",t),(o=a.notificationSettings)!=null&&o.errorNotification&&$.error("설정 가져오기 실패: "+t.message),n(t)}},c.onerror=()=>{const l=new Error("파일 읽기 실패");u("설정 가져오기 실패",l),n(l)},c.readAsText(r)}),[a,f,d,u]);return{settings:a,dashboardSettings:a.dashboardSettings||{},statisticsSettings:a.statisticsSettings||{},databaseSettings:a.databaseSettings||{},notificationSettings:a.notificationSettings||{},generalSettings:a.generalSettings||{},loading:((C=e==null?void 0:e.state)==null?void 0:C.loading)||!1,saving:((P=e==null?void 0:e.state)==null?void 0:P.saving)||!1,error:((j=e==null?void 0:e.state)==null?void 0:j.error)||null,initialized:((I=e==null?void 0:e.state)==null?void 0:I.initialized)||!1,updateSettings:f,updateSettingsWithValidation:R,saveSettings:b,loadSettings:v,exportSettings:N,importSettings:D,resetSettings:E,validationErrors:h,validateSettings:p,logInfo:d,logError:u}},V=()=>{const{dashboardSettings:e,updateSettings:h,saving:y,error:a,validationErrors:f,logInfo:b}=w(),v=g.useMemo(()=>{const u={selectedPegs:[],defaultNe:"",defaultCellId:"",autoRefreshInterval:30,chartStyle:"line",showLegend:!0,showGrid:!0},p={...u,...e};return Array.isArray(e==null?void 0:e.selectedPegs)&&e.selectedPegs.length>0?p.selectedPegs=e.selectedPegs:p.selectedPegs=u.selectedPegs,p},[e]),E=g.useCallback(u=>(b("Dashboard 설정 업데이트",u),h({dashboardSettings:u},"dashboardSettings")),[h,b]),d=g.useMemo(()=>Object.fromEntries(Object.entries(f).filter(([u])=>u.startsWith("dashboardSettings."))),[f]);return{settings:v,updateSettings:E,saving:y,error:a,validationErrors:d,hasErrors:Object.keys(d).length>0}},G=()=>{const{statisticsSettings:e,updateSettings:h,saving:y,error:a,validationErrors:f,logInfo:b}=w(),v=g.useCallback(d=>(b("Statistics 설정 업데이트",d),h({statisticsSettings:d},"statisticsSettings")),[h,b]),E=g.useMemo(()=>Object.fromEntries(Object.entries(f).filter(([d])=>d.startsWith("statisticsSettings."))),[f]);return{settings:e,updateSettings:v,saving:y,error:a,validationErrors:E,hasErrors:Object.keys(E).length>0}};export{w as a,G as b,V as u};
